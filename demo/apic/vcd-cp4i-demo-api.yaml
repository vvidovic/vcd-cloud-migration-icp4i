swagger: '2.0'
info:
  title: VCD CP4I Demo API
  x-ibm-name: vcd-cp4i-demo-api
  version: 1.0.0
schemes:
  - https
basePath: /vcd-cp4i-demo-api
security:
  - clientID: []
securityDefinitions:
  clientID:
    type: apiKey
    in: header
    name: X-IBM-Client-Id
x-ibm-configuration:
  cors:
    enabled: true
  gateway: datapower-api-gateway
  type: rest
  phase: realized
  enforced: true
  testable: true
  assembly:
    execute:
      - switch:
          version: 2.0.0
          title: switch
          case:
            - condition: (($httpVerb() = 'GET' and $operationPath() = '/hello'))
              execute:
                - invoke:
                    version: 2.0.0
                    title: invoke
                    header-control:
                      type: blacklist
                      values: []
                    parameter-control:
                      type: whitelist
                      values: []
                    timeout: 60
                    verb: keep
                    cache-response: protocol
                    cache-ttl: 900
                    stop-on-error: []
                    target-url: $(echoUrl)?$(request.querystring)
            - condition: (($httpVerb() = 'POST' and $operationPath() = '/message'))
              execute: []
            - condition: (($httpVerb() = 'POST' and $operationPath() = '/log'))
              execute: []
            - otherwise:
                - gatewayscript:
                    version: 2.0.0
                    title: gatewayscript
                    source: |-
                      const apim = require('apim');
                      throw "Unknown API operation called.";
  properties:
    echoUrl:
      value: 'http://icp-proxy.10.0.10.2.nip.io:30201'
      encoded: false
  application-authentication:
    certificate: false
  catalogs: {}
  activity-log:
    success-content: activity
    error-content: header
    enabled: true
paths:
  /log:
    post:
      responses:
        '200':
          schema:
            type: string
          description: success
  /message:
    post:
      responses:
        '200':
          schema:
            type: string
          description: success
  /hello:
    get:
      responses:
        '200':
          description: success
          schema:
            type: string
      parameters:
        - name: name
          in: query
          required: true
          description: Sample demo name
          type: string
      consumes: []
      produces: []
